"""–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—ñ–≤ –¥–ª—è –±–æ—Ç–∞."""

from __future__ import annotations

from app.db.models.item import Item, ItemRarity, ItemType

RARITY_EMOJI: dict[ItemRarity, str] = {
    ItemRarity.COMMON: "üü¢",
    ItemRarity.UNCOMMON: "üîπ",
    ItemRarity.RARE: "üîµ",
    ItemRarity.EPIC: "üü£",
    ItemRarity.LEGENDARY: "üü°",
    ItemRarity.UNIQUE: "üíé",
    ItemRarity.MYTHICAL: "üî•",
}

TYPE_LABELS: dict[ItemType, str] = {
    ItemType.STICKER: "—Å—Ç—ñ–∫–µ—Ä",
    ItemType.GIF: "–≥—ñ—Ñ",
    ItemType.ARTIFACT: "–∞—Ä—Ç–µ—Ñ–∞–∫—Ç",
    ItemType.AVATAR: "–∞–≤–∞—Ç–∞—Ä",
    ItemType.FRAME: "—Ñ—Ä–µ–π–º",
    ItemType.CARD: "–∫–∞—Ä—Ç–∫–∞",
}


def format_vusdt(amount: int) -> str:
    """–§–æ—Ä–º–∞—Ç—É—î –±–∞–ª–∞–Ω—Å VUSDT."""

    return f"{amount:,} VUSDT".replace(",", "¬†")


def format_item_card(item: Item, serial: str | None = None) -> str:
    """–ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –∑ –∫–æ—Ä–æ—Ç–∫–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç."""

    rarity_badge = RARITY_EMOJI[item.rarity]
    serial_display = f"#{serial}" if serial else ""
    type_label = TYPE_LABELS.get(item.type, item.type.value)

    return (
        f"{rarity_badge} <b>{item.name}</b> {serial_display}\n"
        f"–¢–∏–ø: {type_label}\n"
        f"CP: <b>{item.cp_value}</b> ‚Ä¢ –í–∏–∫—É–ø: <b>{item.base_buy_price} VUSDT</b>"
    )
